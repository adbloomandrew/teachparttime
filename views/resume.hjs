<!--
	The data layer set for Google Tag Manager
-->
<script>

	dataLayer = [{
		"page": {
			"type": "resume"
		}
	}];

</script>

<script crossorigin="anonymous" src="/js/aws-sdk-2.259.1.min.js"></script>

<section class="register-register-section">
	<div class="container">
		<div class="card-block register-card">
			<h1 class="typo-h1 text-blue text-center mb-2">Step 3: Please upload a copy of your latest resume.</h1>
			<div class="typo-h3 text-gray typo-bold text-center">* Required</div>
			<hr class="divider divider__gray my-3">
			<form>
				<!-- File upload -->
				<div class="js-form-group mb-5">
					<div class="typo-h4 typo-bold text-gray form-label mb-3">Please upload a copy of your latest resume.*</div>
					<label class="file-label">
						<input id="resume" type="file" accept=".doc, .docx, .pdf" class="d-none">
						<span class="control-gray-btn file-upload-btn mr-3">Choose file</span>
						<span id="js-file-name" class="file-name">No file chosen</span>
					</label>
					<div class="file-note text-blue">Supported file formats: .doc, .docx or .pdf file</div>
				</div>

				<button id="upload" type="submit" disabled class="control-gray-btn mr-2">Upload</button>
				<button id="skip" type="submit" disabled class="control-gray-btn">Skip</button>

			</form>
		</div>
	</div>
</section>

<script>

//
//	1.	Get the user session from the cookies
//
var session = Cookies.getJSON('tpt_session');

//
//	Initialize the Amazon Cognito credentials provider
//
var albumBucketName = 'dev.teachpart-time.com-resumes';
var bucketRegion = 'us-east-1';
var IdentityPoolId = 'us-east-1:57db0921-622e-408f-a321-44d3df8d0823';

//
//	Get temporary credentials from AWS to allow us to upload file to S3
//
AWS.config.update({
	region: bucketRegion,
	credentials: new AWS.CognitoIdentityCredentials({
		IdentityPoolId: IdentityPoolId
	})
});

//
//	Initialize the S3 object pointing to the bucket where the resume needs to
//	end up.
//
var s3 = new AWS.S3({
	apiVersion: '2006-03-01',
	params: {
		Bucket: albumBucketName
	}
});

//
//	Check if the user already submitted a resume. And if so change the buttons
//
if(session.fields.resume)
{
	$('#skip').removeAttr("disabled");
	$('#upload').text('Replace');
}

//	  ____    _   _
//	 / __ \  | \ | |
//	| |  | | |  \| |
//	| |  | | | . ` |
//	| |__| | | |\  |
//	 \____/  |_| \_|
//

//
//	<<> React to a file select, this way we can change the state of the page
//
$("input:file").change(function (){

	//
	//	1.	Remove the disabled attribute on the button so the user can
	//		upload the file, since he or she did select it.
	//
	$('#upload').removeAttr("disabled");

});

//
//	<<> If the user already uploaded a resume, give them the chance to skip
//		this step.
//
$('#skip').on('click', function(event) {

	//
	//	1.	Prevent the default form action so we can process the action
	//		our way.
	//
	event.preventDefault();

	window.location.replace('video.html');

});

//
//	<<>	React when the user submits the form
//
$('#upload').on('click', function(event) {

	//
	//	1.	Prevent the default form action so we can process the action
	//		our way.
	//
	event.preventDefault();

	//
	//	2.	Update the UI to let the user know what is happening
	//
	$('#upload').text('Uploading...');

	//
	//	3..	Get the file information from the HTML form
	//
	var files = document.getElementById('resume').files;

	//
	//	4.	Get the first object
	//
	var file = files[0];

	//
	//	5.	Get the file name
	//
	var file_name = file.name;

	//
	//	6.	Create a request object which will allow us to monitor the progress
	//		of the upload
	//
	var request = s3.putObject({
		Key: file_name,
		Body: file,
		ACL: 'public-read'
	});

	//
	//	7.	Add a listener to react every time there is a progress update so
	//		we know how much of the file was sent.
	//
	request.on('httpUploadProgress', function (progress) {

		//console.log(progress.loaded + " of " + progress.total + " bytes");
		//console.log(Math.floor((progress.total - progress.loaded) / progress.total * 100));

	});

	//
	//	8.	Start the upload process
	//
	request.send(function(res) {

		//
		//	1.	Let the user know we finished
		//
		$('#upload').text('Done!');

		//
		//	2.	Create the public URL for the file that will be used by
		//		Airtable to pull the file in to the table
		//
		var url = "https://s3.amazonaws.com/"
				+ "dev.teachpart-time.com-resumes/"
				+ file_name;

		//
		//	3.	Save the URL in to the user session
		//
		session.fields.resume = [
			{
				"url": url
			}
		];

		//
		//	4.	Update the session with the resume URL
		//
		Cookies.set('tpt_session', session, { secure: true });

		//
		//	5.	Insert or Update Airtable
		//
		save_to_airtable(session, function() {

			return window.location.href = 'thankyou';

		});

	});

});

</script>