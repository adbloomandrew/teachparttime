<script>

	//
	//	The data layer set for Google Tag Manager
	//
	dataLayer = [{
		"page": {
			"type": "form"
		}
	}];

</script>

<script crossorigin="anonymous" src="/js/jquery.inputmask.bundle.min.js"></script>

<section class="register-register-section">
	<div class="container">
		<div class="card-block register-card">
			<h1 class="typo-h1 text-blue text-center mb-2">Step 2: Tell us about Yourself</h1>
			<hr class="divider divider__gray my-3">

			<form>

				{{!-- Country --}}
				<div class="js-form-group mb-3">
					<label for="country" class="typo-h4 typo-bold text-gray form-label w-100">Country</label>
					<select id="country" class="form-select">
						<option value="null" selected="selected" disabled="disabled">Select an option</option>
						<option value="usa">USA</option>
						<option value="canada">Canada</option>
						<option value="other">Other</option>
					</select>
				</div>

                {{!-- City --}}
                <div class="js-form-group mb-3">
                    <label for="city" class="typo-h4 typo-bold text-gray form-label w-100">City</label>
                    <input type="text" class="form-input" id="city" placeholder="Where you live" title="City">
                </div>

				{{!-- State --}}
				<div class="js-form-group mb-3">
					<label for="state" class="typo-h4 typo-bold text-gray form-label w-100">State</label>
					<select id="state" class="form-select">
						<option value="null" selected="selected" disabled="disabled">Select an option</option>
					</select>
				</div>

				{{!-- Phone --}}
				<div class="js-form-group mb-3">
					<label for="phone" class="typo-h4 typo-bold text-gray form-label w-100">Phone</label>
					<input type="tel" class="form-input" id="phone" placeholder="(555) 555-5555">
				</div>

				{{!-- Work permit --}}
				<div class="js-form-group mb-3">
					<label for="work_permit" class="typo-h4 typo-bold text-gray form-label w-100">Are you legally eligible to work in the USA or Canada?</label>
					<select id="work_permit" class="form-select">
						<option value="null" selected="selected" disabled="disabled">Select an option</option>
						<option value="yes">Yes</option>
						<option value="no">No</option>
					</select>
				</div>

				{{!-- Webcam type --}}
				<div class="js-form-group mb-3">
					<label for="webcam" class="typo-h4 typo-bold text-gray form-label w-100">What type of webcam-enabled computer do you have?</label>
					<select id="webcam" class="form-select">
						<option value="null" selected="selected" disabled="disabled">Select an option</option>
						<option value="desktop">Desktop PC or MAC</option>
						<option value="laptop">Laptop PC or MAC</option>
						<option value="mobile">Only Smartphone or Tablet</option>
					</select>
				</div>

				{{!-- Computer type --}}
				<div class="js-form-group mb-3">
					<label for="computer_type" class="typo-h4 typo-bold text-gray form-label w-100">What type of computer do you have?</label>
					<select id="computer_type" class="form-select">
						<option value="null" selected="selected" disabled="disabled">Select an option</option>
						<option value="desktop">Desktop PC or MAC</option>
						<option value="mobile">Only Smartphone or Tablet</option>
					</select>
				</div>

				{{!-- Daytime(Mon-Sun) --}}
				<div class="js-form-group mb-3" id="ms">
					<div class="typo-h4 typo-bold text-gray form-label w-100 mb-2">
						Your Daytime Availability
					</div>
					<div class="d-flex flex-column align-items-start">
						<label class="checkbox-label">
							<input type="checkbox" class="d-none" value="6:40 - 7:10am EST" id="ms_1">
							<span class="checkmark"></span>
							6:40 - 7:10am EST
						</label>
						<label class="checkbox-label">
							<input type="checkbox" class="d-none" value="7:20 - 7:50am EST" id="ms_2">
							<span class="checkmark"></span>
							7:20 - 7:50am EST
						</label>
						<label class="checkbox-label">
							<input type="checkbox" class="d-none" value="8:20 - 8:30am EST" id="ms_3">
							<span class="checkmark"></span>
							8:20 - 8:30am EST
						</label>
						<label class="checkbox-label">
							<input type="checkbox" class="d-none" value="8:40 - 9:10am EST" id="ms_4">
							<span class="checkmark"></span>
							8:40 - 9:10am EST
						</label>
					</div>
				</div>

				{{!-- Friday and Saturday night --}}
				<div class="js-form-group mb-3" id="fs">
					<div class="typo-h4 typo-bold text-gray form-label w-100 mb-2">
						Evening Availability (Fri + Sat Only)
					</div>
					<div class="d-flex flex-column align-items-start">
						<label class="checkbox-label">
							<input type="checkbox" class="d-none" value="8:40 - 9:10pm EST" name="night-work" id="fs_1">
							<span class="checkmark"></span>
							8:40 - 9:10pm EST
						</label>
						<label class="checkbox-label">
							<input type="checkbox" class="d-none" value="9:20 - 9:50pm EST" name="night-work" id="fs_2">
							<span class="checkmark"></span>
							9:20 - 9:50pm EST
						</label>
						<label class="checkbox-label">
							<input type="checkbox" class="d-none" value="10:00 - 10:30pm EST" name="night-work" id="fs_3">
							<span class="checkmark"></span>
							10:00 - 10:30pm EST
						</label>
						<label class="checkbox-label">
							<input type="checkbox" class="d-none" value="10:40 - 11:10pm EST" name="night-work" id="fs_4">
							<span class="checkmark"></span>
							10:40 - 11:10pm EST
						</label>
						<label class="checkbox-label">
							<input type="checkbox" class="d-none" value="11:20 - 11:50pm EST" name="night-work" id="fs_5">
							<span class="checkmark"></span>
							11:20 - 11:50pm EST
						</label>
					</div>
				</div>

				{{!-- Submit --}}
				<div class="text-right">
					<button class="control-gray-btn" type="submit">NEXT</button>
				</div>


			</form>
		</div>
	</div>
</section>

<script>

//
//	A collection of all the states for the US and Canada
//
var states = {
	usa: {
		"AL": "Alabama", "AK": "Alaska", "AZ": "Arizona", "AR": "Arkansas",
		"CA": "California", "CO": "Colorado", "CT": "Connecticut",
		"DE": "Delaware", "FL": "Florida", "GA": "Georgia", "HI": "Hawaii",
		"ID": "Idaho", "IL": "Illinois", "IN": "Indiana", "IA": "Iowa",
		"KS": "Kansas", "KY": "Kentucky", "LA": "Louisiana", "ME": "Maine",
		"MD": "Maryland", "MA": "Massachusetts", "MI": "Michigan",
		"MN": "Minnesota", "MS": "Mississippi", "MO": "Missouri",
		"MT": "Montana", "NE": "Nebraska", "NV": "Nevada",
		"NH": "New Hampshire", "NJ": "New Jersey", "NM": "New Mexico",
		"NY": "New York", "NC": "North Carolina", "ND": "North Dakota",
		"OH": "Ohio", "OK": "Oklahoma", "OR": "Oregon", "PA": "Pennsylvania",
		"RI": "Rhode Island", "SC": "South Carolina", "SD": "South Dakota",
		"TN": "Tennessee", "TX": "Texas", "UT": "Utah", "VT": "Vermont",
		"VA": "Virginia", "WA": "Washington", "WV": "West Virginia",
		"WI": "Wisconsin", "WY": "Wyomin", "Other": "Other"
	},
	canada: {
		"AB": "Alberta", "BC": "British Columbia", "MB": "Manitoba",
		"NB": "New Brunswick", "NL": "Newfoundland and Labrador",
		"NS": "Nova Scotia", "NT": "Northwest Territories", "NU": "Nunavut",
		"ON": "Ontario", "PE": "Prince Edward Island", "QC": "Quebec",
		"SK": "Saskatchewan", "YT": "Yukon"
	}
}

//
//	A collection of all the phone masks
//
var phone_mask = {
	usa: "+1(999)999-9999",
	canada: "+1(999)999-9999",
	uk: "+44-99-9999-9999",
}


//
//	This array is used to validate the form. It is outside the submit check
//	because we need to edit it based on the country that was selected.
//
//	Only for the US and Canada you can select a state
//
var form_required = [
	'country', 'city', 'phone', 'work_permit', 'webcam', 'computer_type'
];

//
//	<<> React every time a country is selected
//
$("#country").change(function() {

	//
	//	1.	Get the selected country
	//
	var country = $(this).val();

	//
	//	2.	Add phone mask
	//
	if(country !== 'other' && country !== 'null')
	{
		$('#phone').inputmask({
			mask: phone_mask[country]
		});
	}

	//
	//	3.	Only two countries have states
	//
	if(country != 'usa' && country != 'canada')
	{
		//
		//	1.	Disable the drop down for the state
		//
		$('#state').prop("disabled", true);

		//
		//	2.	Clear the selection despite the state
		//
		$('#state').val('').change();

		//
		//	3.	Get the index of the state
		//
		var index = form_required.indexOf('state');

		//
		//	4.	Check if the state variable exists
		//
		if(index > -1)
		{
			//
			//	1.	Remove the state from the array so we don't validate
			//		it when US and Canada are not selected.
			//
			form_required.splice(index, 1);
		}

		//
		//	->	Stop the code
		//
		return;
	}

	//
	//	4.	Add the state check so when we submit the form we know that
	//		the state needs to be selected. For countries that are not
	//		US and Canada we don't need to force a state.
	//
	form_required.push('state');

	//
	//	5.	Re-enable the drop down regardless of its state.
	//
	$('#state').prop("disabled", false);

	//
	//	6.	Remove everything from the state selection so we work with a
	//		clean slate.
	//
	$('#state').find('option').not(':first').remove();

	//
	//	7.	Loop over the states for a givven country and add them to
	//		the drop down selection.
	//
	$.each(states[country], function(key, value) {

		$('#state').append($("<option></option>")
				   .attr("value", key)
				   .text(value));

	});

});

//
//	Run the following code only if we have a Cookie session.
//
//	IMPORTANT
//
//		This code needs to be bellow $("#country").change(function() {})
//		this way the listener is active and will react to the programmatic
//		changes that the following code will do.
//
if(session)
{
	//
	//	1.	Loop over the whole object and look for the matching HTML element,
	//		and populate it with the data.
	//
	$.each(session.fields, function(key, value) {

		//
		//	1.	Set the value for the input field while also triggering a
		//		change action, so the listener that is above, can
		//		populate the state input field. THis way we can recreate the
		//		whole form.
		//
		$('#' + key).val(value).change();

		//
		//	2.	Check if we are dealing with checkboxes
		//
		if(value == 'true')
		{
			//
			//	1.	Mark the checkbox as selected
			//
			$('#' + key).prop("checked", true);
		}

	});
}

//
//	<<> Setup a listener which will react each time a input form is
//		changed so we can keep saving the user information so he or she
//		can always return to the form later
//
$(".js-form-group").change(function() {

	//
	//	1.	Get the ID of the input form, which will become the key of the
	//		JS Object
	//
	var key = $($(this).children()[1]).attr('id');

	//
	//	2.	Get the value that will be saved under the Key
	//
	var value = $($(this).children()[1]).val();

	//
	//	3.	If there are not default input values, there is a chance the
	//		form change was because of check boxes.
	//
	if(!key || !value)
	{
		//
		//	1.	Loop over check boxes
		//
		$(this).children().children().each(function(index, div) {

			$(div).children().each(function(index, check) {

				//
				//	1.	If checked we enable the key, and save it to the
				//		session
				//
				if(check.checked)
				{
					var key = $(check).attr('id');

					session.fields[key] = 'true';
				}

				//
				//	2.	If not checked we set an empty value so we remove it
				//		from Airtable
				//
				if(!check.checked)
				{
					var key = $(check).attr('id');

					//
					//	1.	Make sure we have this key in our session
					//
					if(session.fields[key])
					{
						session.fields[key] = "";
					}
				}

			});

		});
	}

	//
	//	4.	Set a non check box value only when there is data
	//
	if(key || value)
	{
		//
		//	1.	Save or update the data in the user session
		//
		session.fields[key] = value;
	}

	//
	//	5.	Update Cookies no matter what for simplicity sake
	//
	Cookies.set('tpt_session', session, { secure: true });

	//
	//	6.	Make the first request to save the partial data that the user
	//		submitted, so then in our DB we know what is missing and can
	//		ping the user to let them know what is left.
	//
	save_to_airtable(session, function() {});

});

//	  ____    _   _
//	 / __ \  | \ | |
//	| |  | | |  \| |
//	| |  | | | . ` |
//	| |__| | | |\  |
//	 \____/  |_| \_|
//

//
//	<<>	React when the user wants to log in.
//
$('form').on("submit", function(event) {

	//
	//	1.	Prevent the default form action so we can process the action
	//		our way.
	//
	event.preventDefault();

	//
	//	2.	Get the user session from the cookies. We do this before we move
	//		to the next page so we make sure there is no missing data.
	//
	var session = Cookies.getJSON('tpt_session');

	//
	//	3.	This are the possible checkboxes for Mon to Sun
	//
	var mon_sun_time = ['ms_1', 'ms_2', 'ms_3', 'ms_4'];

	//
	//	4.	This are the possible checkboxes for Fri to Sat
	//
	var fri_sat_time = ['fs_1', 'fs_2', 'fs_3', 'fs_4', 'fs_5'];

	//
	//	5. And array that will hold all the missing fields
	//
	var missing_list = [];

	//
	//	6.	Check if the session is actually present. Someone could have
	//		deleted the session by hand.
	//
	if(session)
	{
		//
		//	1.	Loop over each form input to see if something is missing.
		//
		$.each(form_required, function(index, key) {

			//
			//	1.	Check if the key has a value behind it
			//
			if(!session.fields[key])
			{
				missing_list.push(key);
			}

		});

		//
		//	2.	Create special variables to keep track if at least one
		//		checkbox was selected.
		//
		var mon_sun = 0;
		var fri_sat = 0;

		//
		//	3.	Loop over every checkbox and see if something was selected
		//
		$.each(mon_sun_time, function(index, key) {

			//
			//	1.	Check if the key has a value behind it
			//
			if(session.fields[key])
			{
				mon_sun++;
			}

		});

		//
		//	4.	Loop over every checkbox and see if something was selected
		//
		$.each(fri_sat_time, function(index, key) {

			//
			//	1.	Check if the key has a value behind it
			//
			if(session.fields[key])
			{
				fri_sat++;
			}

		});

		//
		//	5.	Check the count for each checkbox type, and if the result is
		//		a big zero, then we know the user did not select anything.
		//		If the result is a positive number, then we know something was
		//		checked.
		//
		if(!mon_sun)
		{
			missing_list.push("at least one Mon to Sun time");
		}

		if(!fri_sat)
		{
			missing_list.push("at least one Fri to Sat time");
		}
	}

	//
	//	6.	If the array is not empty, then it means that there was at least
	//		one missing spot.
	//
	if(missing_list.length)
	{
		//
		//	1.	Join the array in to a nice sting
		//
		var missing_imputs = missing_list.join(', ');

		//
		//	->	Don't let the user move forward
		//
		return alert("You are missing the following fields: " + missing_imputs);
	}

	//
	//	->	Redirect the user to the next step
	//
	return window.location.href = 'video';

});

</script>